// src/main.ts

import { setupCanvasPair } from "./engine/renderer/initCanvas";
import { createAnimator } from "./atlas/animationAtlas";
import { setupInput } from "./engine/input/input";
import { GameScene } from "./engine/scenes/GameScene";
import { MenuScene } from "./engine/scenes/MenuScene";
import { setScene, loop } from "./engine/scenes/SceneManager";
import { zzfx, zzfxM, playZzfxMSong } from "./engine/audio/SoundEngine";

const WORLD = { w: 480, h: 270 };

// 🖼️ Full-size mask for menu scene
const { ctx, glCanvas, mask, maskCtx } = setupCanvasPair(WORLD.w, WORLD.h, WORLD.w, WORLD.h);
setupInput();

MenuScene.setCanvas(ctx, glCanvas, maskCtx, mask);
GameScene.setCanvas(ctx, glCanvas, maskCtx, mask);

// 🎵 Inline zzfxm song data
const retro1Song = [[[2,0,4e3,,,.03,2,1.25,,,,,.02,6.8,-.3,,.5],[2,0,4e3,,,.03,2,1.25,,,,,.02,6.8,-.3,,.5],[,0,655,,,.11,2,1.65,,,,,,3.8,-.1,.1],[,0,655,,,.11,2,1.65,,,,,,3.8,-.1,.1],[.3,0,900,.02,,.07,4,0,,,,,,4],[.3,0,900,.02,,.07,4,0,,,,,,4],[,0,84,,,,,.7,,,,.5,,6.7,1,.05]],[[[3,-1,25,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,],[,1,25.5,25.75,,25,25.5,13.5,,25,25.5,25.75,,25,25.5,13.5,,25,25.5,25.75,,25,25.5,13.5,,25,25.5,25.75,,25,25.5,25.5,,25,25.5,25.75,,25,25.5,13.5,,25,25.5,25.75,,25,25.5,13.5,,25,25.5,25.75,,25,25.5,13.5,,25,25.5,25.75,,25,25.5,25.5,,25],[1,-1,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23],[4,-1,,,20,,21,,27,,,,,,,,,,,,27,,21,,20,,,,,,,,,,,,20,,21,,27,,,,,,,,,,,,27,,21,,20,,,,,,,,,,],[5,1,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,,,21,,],[2,-1,,,,,,,,,13,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,13,25,,,,,,,,,,,,,,,14,,,,,,,,],[2,-1,,,,,,,,,,,18,,,18.16,,,,,,,,,,,,19,18,,,,,,,,,,,,,,,,18,,,,,,,,,,,,,,,,18,,19,,25,,]],[[3,-1,27,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,],[,1,27.5,27.75,,27,27.5,15.5,,27,27.5,27.75,,27,27.5,15.5,,27,27.5,27.75,,27,27.5,15.5,,27,27.5,27.75,,27,27.5,27.5,,27,27.5,27.75,,27,27.5,15.5,,27,27.5,27.75,,27,27.5,15.5,,27,27.5,27.75,,27,27.5,15.5,,27,27.5,27.75,,27,27.5,27.5,,27],[1,-1,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23,29.16,29.23],[4,-1,,,22,,23,,29,,,,,,,,,,,,29,,23,,22,,,,,,,,,,,,22,,23,,29,,,,,,,,,,,,29,,23,,22,,,,,,,,,,],[5,1,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,,,23,,],[6,-1,,,,,,,,,15,,,,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,15,,,,,,,,,,,,,,,,28,16,,,,,,,],[2,-1,,,,,,,,,,,20,,,20.16,,,,,,,,,,,,21,20,,,,,,,,,,,,,,,,20,,,,,,,,,,,,,,,,20,,21,,27,,]]],[0,1],126]

// ⏺️ Unpack song data
const [
  instrumentsRaw,
  patternsRaw,
  sequenceRaw,
  bpmRaw = 125
] = retro1Song;

const instruments = instrumentsRaw as number[][];
const patterns = patternsRaw as number[][][];
const sequence = sequenceRaw as number[];
const bpm = bpmRaw as number;

// 🔊 Precompute music buffers
const [left, right] = zzfxM(instruments, patterns, sequence, bpm);

let musicSrc: AudioBufferSourceNode | undefined;

createAnimator(anim => {
  GameScene.injectAnimator(anim);

  addEventListener("pointerdown", () => {
    zzfx(); // Unlock audio context
    setScene(GameScene);
    musicSrc = playZzfxMSong(left, right); // Seamless loop
  }, { once: true });

  addEventListener("click", () => {
    zzfx(...[1.6, 0, 254, 0, .16, .12, 0, 1.1, 0, 0, 406, .09, .04, .4, 0, 0, .04, .54, .26, .29]);
  }, { once: true });

  setScene(MenuScene);
  requestAnimationFrame(loop);
});
