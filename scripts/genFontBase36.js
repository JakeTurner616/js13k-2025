// tools/genFontBase36.js
// Generates src/engine/font/procFont.ts (base36-compressed 5x7 font)

import fs from "fs";
import path from "path";

/** Keep this authoritative so we only bake needed glyphs. */
const TEXT_SOURCES = [
  // Menu
  "FLYKT",
  "CLICK / TAP TO START!",

  // Game Over / Credits
  "THANKS FOR PLAYING",

  "U",

  // HUD (ensure S, digits, and colon)
  "DEATHS TIME",
  "0123456789",
  "00:00",
];

/** 5x7 uppercase pixel font */
const FONT = {
  "A":[".###.","#...#","#...#","#####","#...#","#...#","#...#"],
  "B":["####.","#...#","#...#","####.","#...#","#...#","####."],
  "C":[".###.","#...#","#....","#....","#....","#...#",".###."],
  "D":["####.","#...#","#...#","#...#","#...#","#...#","####."],
  "E":["#####","#....","###..","#....","#....","#....","#####"],
  "F":["#####","#....","###..","#....","#....","#....","#...."],
  "G":[".###.","#...#","#....","#..##","#...#","#...#",".###."],
  "H":["#...#","#...#","#...#","#####","#...#","#...#","#...#"],
  "I":["#####","..#..","..#..","..#..","..#..","..#..","#####"],
  "J":["..###","...#.","...#.","...#.","#..#.","#..#.",".##.."],
  "K":["#...#","#..#.","###..","#..#.","#...#","#...#","#...#"],
  "L":["#....","#....","#....","#....","#....","#....","#####"],
  "M":["#...#","##.##","#.#.#","#.#.#","#...#","#...#","#...#"],
  "N":["#...#","##..#","#.#.#","#..##","#...#","#...#","#...#"],
  "O":[".###.","#...#","#...#","#...#","#...#","#...#",".###."],
  "P":["####.","#...#","#...#","####.","#....","#....","#...."],
  "R":["####.","#...#","#...#","####.","#.#..","#..#.","#...#"],
  "S":[".####","#....","#....",".###.","....#","....#","####."],
  "T":["#####","..#..","..#..","..#..","..#..","..#..","..#.."],
  "U":["#...#","#...#","#...#","#...#","#...#","#...#",".###."],
  "V":["#...#","#...#","#...#","#...#",".#.#.",".#.#.","..#.."],
  "W":["#...#","#...#","#...#","#.#.#","#.#.#","##.##","#...#"],
  "Y":["#...#","#...#",".#.#.","..#..","..#..","..#..","..#.."],

  "0":[".###.","#...#","#...#","#...#","#...#","#...#",".###."],
  "1":["..#..",".##..","..#..","..#..","..#..","..#..",".###."],
  "2":[".###.","#...#","....#","...#.","..#..",".#...","#####"],
  "3":["####.","....#","....#",".###.","....#","....#","####."],
  "4":["#...#","#...#","#...#","#####","....#","....#","....#"],
  "5":["#####","#....","#....","####.","....#","....#","####."],
  "6":[".###.","#....","#....","####.","#...#","#...#",".###."],
  "7":["#####","....#","...#.","..#..","..#..","..#..","..#.."],
  "8":[".###.","#...#","#...#",".###.","#...#","#...#",".###."],
  "9":[".###.","#...#","#...#",".####","....#","....#",".###."],

  " ":[".....",".....",".....",".....",".....",".....","....."],
  ".":[".....",".....",".....",".....",".....","..#..","..#.."],
  ",":[".....",".....",".....",".....","..#..","..#..",".#..."],
  "/":["....#","...#.","..#..",".#...","#....",".....","....."],
  "!":["..#..","..#..","..#..","..#..","..#..",".....","..#.."],
  ":":[".....","..#..",".....",".....","..#..",".....","....."], // colon
};

/* Build exact glyph set */
const needed = new Set(
  TEXT_SOURCES.join("").toUpperCase().split("").filter(ch => ch in FONT)
);
const usedChars = Array.from(needed).sort();

/* Encode glyphs (MSB-first 35 bits → base36, 7 chars) */
function encodeGlyph(rows) {
  let bits=""; for (let y=0;y<7;y++) for (let x=0;x<5;x++) bits += rows[y][x]==="#"?"1":"0";
  return BigInt("0b"+bits).toString(36).padStart(7,"0");
}

const glyphMap = usedChars.join("");
const encodedData = usedChars.map(c=>encodeGlyph(FONT[c])).join("");

/* Emit runtime module */
const out=`// Auto-generated font (base36 compressed 5x7) - ONLY used glyphs

export const glyphs: string = "${glyphMap}";
export const data: string = "${encodedData}";
`;

const outFile = path.resolve("src/engine/font/procFont.ts");
fs.writeFileSync(outFile, out);
console.log("✅ Font generated:", outFile);
console.log("Included glyphs:", glyphMap.split("").join(" "));
